#include "aspect_common.ah"

aspect AutoFunctionLogger {

// --- Trace for: (int) ---
advice call("% %(int)") : before() {
    AspectLogger::depth()++;
    std::ostringstream oss;
    oss << AspectLogger::indent() << "[CALL   ] depth=" << AspectLogger::depth() << " " << tjp->signature() << "(" << "arg0=" << *tjp->arg<0>() << ")";
    AspectLogger::log(oss.str());
}
advice call("% %(int)") : after() {
    std::ostringstream oss;
    oss << AspectLogger::indent() << "[RETURN ] depth=" << AspectLogger::depth() << " " << tjp->signature();
    if (tjp->result()) {
        oss << " => " << *tjp->result();
    } else {
        oss << " => void";
    }
    AspectLogger::log(oss.str());
    AspectLogger::depth()--;
}

};
