#ifndef ASPECT_COMMON_AH
#define ASPECT_COMMON_AH

#include <iostream>
#include <fstream>
#include <mutex>
#include <sstream>
#include <atomic>

class AspectLogger {
public:
    static std::ofstream& stream() {
        static std::ofstream log("trace.log", std::ios::out | std::ios::app);
        return log;
    }

    static std::mutex& lock() {
        static std::mutex mtx;
        return mtx;
    }

    static void log(const std::string& msg) {
        std::lock_guard<std::mutex> guard(lock());
        stream() << msg << std::endl;
    }

    static std::atomic<int>& depth() {
        static std::atomic<int> d{0};
        return d;
    }

    static std::string indent() {
        return std::string(depth() * 2, ' ');
    }
};

#endif // ASPECT_COMMON_AH
