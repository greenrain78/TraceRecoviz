
[LOG    ] Run 시작: void testing::Test::Run()
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=-5)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 1
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=-1)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 1
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=-10)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 1
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=0)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 1
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=1)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 1
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=2)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 2
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=3)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 6
[IntegerFunctionTest.Factorial]  [CALL   ] (0) int Factorial(int) (arg0=8)
[IntegerFunctionTest.Factorial]  [RETURN1] (0) int Factorial(int) => 40320
[LOG    ] Run 끝: void testing::Test::Run()


[LOG    ] Run 시작: void testing::Test::Run()
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=-1)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=-2)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=-2147483648)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=0)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=1)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=2)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 1
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=3)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 1
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=4)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=5)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 1
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=6)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 0
[IntegerFunctionTest.IsPrime]  [CALL   ] (0) bool IsPrime(int) (arg0=23)
[IntegerFunctionTest.IsPrime]  [RETURN1] (0) bool IsPrime(int) => 1
[LOG    ] Run 끝: void testing::Test::Run()


[LOG    ] Run 시작: void testing::Test::Run()
[QueueTest.DefaultConstructor]  [CALL   ] (0x558a2cae3e40) void Queue<int>::Enqueue(const int &) (arg0=1)
[QueueTest.DefaultConstructor]  [RETURN2] (0x558a2cae3e40) void Queue<int>::Enqueue(const int &) => void
[QueueTest.DefaultConstructor]  [CALL   ] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) (arg0=2)
[QueueTest.DefaultConstructor]  [RETURN2] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) => void
[QueueTest.DefaultConstructor]  [CALL   ] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) (arg0=3)
[QueueTest.DefaultConstructor]  [RETURN2] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) => void
[QueueTest.DefaultConstructor]  [CALL   ] (0x558a2cae3e28) unsigned long int Queue<int>::Size() const ()
[QueueTest.DefaultConstructor]  [RETURN1] (0x558a2cae3e28) unsigned long int Queue<int>::Size() const => 0
[LOG    ] Run 끝: void testing::Test::Run()


[LOG    ] Run 시작: void testing::Test::Run()
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e40) void Queue<int>::Enqueue(const int &) (arg0=1)
[QueueTest.Dequeue]  [RETURN2] (0x558a2cae3e40) void Queue<int>::Enqueue(const int &) => void
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) (arg0=2)
[QueueTest.Dequeue]  [RETURN2] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) => void
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) (arg0=3)
[QueueTest.Dequeue]  [RETURN2] (0x558a2cae3e58) void Queue<int>::Enqueue(const int &) => void
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e28) int *Queue<int>::Dequeue() ()
[QueueTest.Dequeue]  [RETURN1] (0x558a2cae3e28) int *Queue<int>::Dequeue() => 0
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e40) int *Queue<int>::Dequeue() ()
[QueueTest.Dequeue]  [RETURN1] (0x558a2cae3e40) int *Queue<int>::Dequeue() => 0x558a2cae3fb0
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e40) unsigned long int Queue<int>::Size() const ()
[QueueTest.Dequeue]  [RETURN1] (0x558a2cae3e40) unsigned long int Queue<int>::Size() const => 0
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e58) int *Queue<int>::Dequeue() ()
[QueueTest.Dequeue]  [RETURN1] (0x558a2cae3e58) int *Queue<int>::Dequeue() => 0x558a2cae3fb0
[QueueTest.Dequeue]  [CALL   ] (0x558a2cae3e58) unsigned long int Queue<int>::Size() const ()
[QueueTest.Dequeue]  [RETURN1] (0x558a2cae3e58) unsigned long int Queue<int>::Size() const => 1
[LOG    ] Run 끝: void testing::Test::Run()

