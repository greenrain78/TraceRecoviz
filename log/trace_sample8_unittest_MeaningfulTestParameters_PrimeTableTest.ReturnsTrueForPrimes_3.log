[TRACE] Registered Parameter: (true, 10)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::SetUp()
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::SetUp() => callee: (ptr=0x55915b7dfa10) (anonymous namespace)::HybridPrimeTable::HybridPrimeTable(bool, int) (arg0=1 : bool1, arg1=10 : int10)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::SetUp() => callee: (ptr=0x55915b7dfa10) (anonymous namespace)::HybridPrimeTable::HybridPrimeTable(bool, int)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::SetUp()
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody()
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [ASSERTION_CALL] EXPECT_TRUE(table_->IsPrime(2))
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=2 : int2)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=2 : int2)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [ASSERTION_CALL] EXPECT_TRUE(table_->IsPrime(3))
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=3 : int3)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=3 : int3)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [ASSERTION_CALL] EXPECT_TRUE(table_->IsPrime(5))
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=5 : int5)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=5 : int5)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [ASSERTION_CALL] EXPECT_TRUE(table_->IsPrime(7))
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=7 : int7)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=7 : int7)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [ASSERTION_CALL] EXPECT_TRUE(table_->IsPrime(11))
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=11 : int11)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=11 : int11)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [ASSERTION_CALL] EXPECT_TRUE(table_->IsPrime(131))
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=131 : int131)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=131 : int131)
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ed800) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody() => callee: (ptr=0x55915b7dfa10) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 1
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest_ReturnsTrueForPrimes_Test::TestBody()
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::TearDown()
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [CALL] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::TearDown() => callee: (ptr=0x55915b7dfa10) virtual (anonymous namespace)::HybridPrimeTable::~HybridPrimeTable()
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::TearDown() => callee: (ptr=0x55915b7dfa10) virtual (anonymous namespace)::HybridPrimeTable::~HybridPrimeTable() => <destroyed>
[MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7de510) virtual void (anonymous namespace)::PrimeTableTest::TearDown()
[TRACE] Test END: MeaningfulTestParameters/PrimeTableTest.ReturnsTrueForPrimes/3
