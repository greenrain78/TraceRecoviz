[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0278) Queue<int>::Queue() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0278) Queue<int>::Queue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0290) Queue<int>::Queue() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0290) Queue<int>::Queue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a8) Queue<int>::Queue() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a8) Queue<int>::Queue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp()
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QuickTest::SetUp()
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QuickTest::SetUp()
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e0290) void Queue<int>::Enqueue(const int &)  (arg0=1 : int1)
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0290) void Queue<int>::Enqueue(const int &)  => callee: (ptr=0x55915b7e72d0) QueueNode<int>::QueueNode(const int &)  (arg0=1 : int1)
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0290) void Queue<int>::Enqueue(const int &)  => callee: (ptr=0x55915b7e72d0) QueueNode<int>::QueueNode(const int &) 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e0290) void Queue<int>::Enqueue(const int &) 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &)  (arg0=2 : int2)
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &)  => callee: (ptr=0x55915b7e7660) QueueNode<int>::QueueNode(const int &)  (arg0=2 : int2)
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &)  => callee: (ptr=0x55915b7e7660) QueueNode<int>::QueueNode(const int &) 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &) 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &)  (arg0=3 : int3)
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &)  => callee: (ptr=0x55915b7e7640) QueueNode<int>::QueueNode(const int &)  (arg0=3 : int3)
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &)  => callee: (ptr=0x55915b7e7640) QueueNode<int>::QueueNode(const int &) 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp() => callee: (ptr=0x55915b7e02a8) void Queue<int>::Enqueue(const int &) 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest::SetUp()
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody()
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e0278) int *Queue<int>::Dequeue() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e0278) int *Queue<int>::Dequeue()  => 0x7fffd4fc88a8
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_TRUE(n == nullptr)
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e0290) int *Queue<int>::Dequeue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0290) int *Queue<int>::Dequeue()  => callee: (ptr=0x55915b7e72d0) const int &QueueNode<int>::element() const 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0290) int *Queue<int>::Dequeue()  => callee: (ptr=0x55915b7e72d0) const int &QueueNode<int>::element() const  => 1
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e0290) int *Queue<int>::Dequeue()  => 0x55915b7e72f0
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_TRUE(n != nullptr)
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_EQ(1, *n)
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_EQ(0u, q1_.Size())
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e0290) size_t Queue<int>::Size() const 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e0290) size_t Queue<int>::Size() const  => 0
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e02a8) int *Queue<int>::Dequeue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e02a8) int *Queue<int>::Dequeue()  => callee: (ptr=0x55915b7e7660) const int &QueueNode<int>::element() const 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e02a8) int *Queue<int>::Dequeue()  => callee: (ptr=0x55915b7e7660) const int &QueueNode<int>::element() const  => 2
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e02a8) int *Queue<int>::Dequeue()  => 0x55915b7e72f0
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_TRUE(n != nullptr)
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_EQ(2, *n)
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_EQ(1u, q2_.Size())
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e02a8) size_t Queue<int>::Size() const 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody() => callee: (ptr=0x55915b7e02a8) size_t Queue<int>::Size() const  => 1
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QueueTest_Dequeue_Test::TestBody()
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QuickTest::TearDown()
[QueueTest.Dequeue] [ASSERTION_CALL] EXPECT_TRUE(end_time - start_time_ <= 5)
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0260) virtual void (anonymous namespace)::QuickTest::TearDown()
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a8) Queue<int>::~Queue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e02a8) Queue<int>::~Queue()  => callee: (ptr=0x55915b7e02a8) void Queue<int>::Clear() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e02a8) void Queue<int>::Clear()  => callee: (ptr=0x55915b7e7640) QueueNode<int> *QueueNode<int>::next() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e02a8) void Queue<int>::Clear()  => callee: (ptr=0x55915b7e7640) QueueNode<int> *QueueNode<int>::next()  => 0
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e02a8) Queue<int>::~Queue()  => callee: (ptr=0x55915b7e02a8) void Queue<int>::Clear() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a8) Queue<int>::~Queue()  => <destroyed>
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0290) Queue<int>::~Queue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0290) Queue<int>::~Queue()  => callee: (ptr=0x55915b7e0290) void Queue<int>::Clear() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0290) Queue<int>::~Queue()  => callee: (ptr=0x55915b7e0290) void Queue<int>::Clear() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0290) Queue<int>::~Queue()  => <destroyed>
[QueueTest.Dequeue] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0278) Queue<int>::~Queue() 
[QueueTest.Dequeue] [CALL] caller: (ptr=0x55915b7e0278) Queue<int>::~Queue()  => callee: (ptr=0x55915b7e0278) void Queue<int>::Clear() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x55915b7e0278) Queue<int>::~Queue()  => callee: (ptr=0x55915b7e0278) void Queue<int>::Clear() 
[QueueTest.Dequeue] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e0278) Queue<int>::~Queue()  => <destroyed>
[TRACE] Test END: QueueTest.Dequeue
