[TRACE] Registered Parameter: (true, 1)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::SetUp()
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::SetUp() => callee: (ptr=0x55915b7df5e0) (anonymous namespace)::HybridPrimeTable::HybridPrimeTable(bool, int) (arg0=1 : bool1, arg1=1 : int1)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::SetUp() => callee: (ptr=0x55915b7df5e0) (anonymous namespace)::HybridPrimeTable::HybridPrimeTable(bool, int)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::SetUp()
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody()
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [ASSERTION_CALL] EXPECT_FALSE(table_->IsPrime(-5))
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=-5 : int-5)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=-5 : int-5)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [ASSERTION_CALL] EXPECT_FALSE(table_->IsPrime(0))
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=0 : int0)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=0 : int0)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [ASSERTION_CALL] EXPECT_FALSE(table_->IsPrime(1))
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=1 : int1)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=1 : int1)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [ASSERTION_CALL] EXPECT_FALSE(table_->IsPrime(4))
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=4 : int4)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=4 : int4)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [ASSERTION_CALL] EXPECT_FALSE(table_->IsPrime(6))
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=6 : int6)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=6 : int6)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [ASSERTION_CALL] EXPECT_FALSE(table_->IsPrime(100))
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const (arg0=100 : int100)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const (arg0=100 : int100)
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => callee: (ptr=0x55915b7ec8c0) virtual bool OnTheFlyPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody() => callee: (ptr=0x55915b7df5e0) virtual bool (anonymous namespace)::HybridPrimeTable::IsPrime(int) const => 0
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest_ReturnsFalseForNonPrimes_Test::TestBody()
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::TearDown()
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [CALL] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::TearDown() => callee: (ptr=0x55915b7df5e0) virtual (anonymous namespace)::HybridPrimeTable::~HybridPrimeTable()
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::TearDown() => callee: (ptr=0x55915b7df5e0) virtual (anonymous namespace)::HybridPrimeTable::~HybridPrimeTable() => <destroyed>
[MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2] [RETURN] caller: (ptr=0x1005) GoogleTest::OnTestStart => callee: (ptr=0x55915b7e02a0) virtual void (anonymous namespace)::PrimeTableTest::TearDown()
[TRACE] Test END: MeaningfulTestParameters/PrimeTableTest.ReturnsFalseForNonPrimes/2
